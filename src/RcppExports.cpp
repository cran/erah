// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getRTSpectMatrix
NumericMatrix getRTSpectMatrix(NumericMatrix mat, NumericVector rt_vect, NumericVector class_vect, double rt_threshold, double corr_threshold);
RcppExport SEXP _erah_getRTSpectMatrix(SEXP matSEXP, SEXP rt_vectSEXP, SEXP class_vectSEXP, SEXP rt_thresholdSEXP, SEXP corr_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rt_vect(rt_vectSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type class_vect(class_vectSEXP);
    Rcpp::traits::input_parameter< double >::type rt_threshold(rt_thresholdSEXP);
    Rcpp::traits::input_parameter< double >::type corr_threshold(corr_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(getRTSpectMatrix(mat, rt_vect, class_vect, rt_threshold, corr_threshold));
    return rcpp_result_gen;
END_RCPP
}
// runmean
NumericVector runmean(NumericVector In, int nWin);
RcppExport SEXP _erah_runmean(SEXP InSEXP, SEXP nWinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type In(InSEXP);
    Rcpp::traits::input_parameter< int >::type nWin(nWinSEXP);
    rcpp_result_gen = Rcpp::wrap(runmean(In, nWin));
    return rcpp_result_gen;
END_RCPP
}
// runmin
NumericVector runmin(NumericVector In, int nWin);
RcppExport SEXP _erah_runmin(SEXP InSEXP, SEXP nWinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type In(InSEXP);
    Rcpp::traits::input_parameter< int >::type nWin(nWinSEXP);
    rcpp_result_gen = Rcpp::wrap(runmin(In, nWin));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_erah_getRTSpectMatrix", (DL_FUNC) &_erah_getRTSpectMatrix, 5},
    {"_erah_runmean", (DL_FUNC) &_erah_runmean, 2},
    {"_erah_runmin", (DL_FUNC) &_erah_runmin, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_erah(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
